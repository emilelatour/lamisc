% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adorn_calc_summ_stats.R
\name{adorn_calc_summ_stats}
\alias{adorn_calc_summ_stats}
\title{Add and Calculate Summary Statistics Columns to a Table}
\usage{
adorn_calc_summ_stats(
  tab,
  accuracy = 0.1,
  scale = 1,
  prefix = "",
  suffix = "",
  big_mark = "",
  decimal_mark = ".",
  style_positive = c("none", "plus"),
  style_negative = c("hyphen", "minus", "parens"),
  scale_cut = NULL,
  trim = TRUE,
  form_list = list("{mean} ({sd})", "{p50} [{p25} to {p75}]", "{p0} to {p100}")
)
}
\arguments{
\item{tab}{A data frame or tibble containing the data.}

\item{accuracy}{Numeric. The desired rounding accuracy for summary statistics (default: 0.1).}

\item{scale}{Numeric. A scaling factor to apply to numeric values (default: 1.0).}

\item{prefix}{Character. A string to prepend to formatted values (default: "").}

\item{suffix}{Character. A string to append to formatted values (default: "").}

\item{big_mark}{Character. The thousands separator (default: "").}

\item{decimal_mark}{Character. The decimal separator (default: ".").}

\item{style_positive}{Character. Style for positive numbers. Options: "none", "plus" (default: "none").}

\item{style_negative}{Character. Style for negative numbers. Options: "hyphen", "minus", "parens" (default: "hyphen").}

\item{scale_cut}{A function to apply to scaled values for trimming (default: NULL).}

\item{trim}{Logical. Whether to trim whitespace from formatted numbers (default: TRUE).}

\item{form_list}{A list of formulas for dynamically adding summary statistic columns (default: list of common summary statistics).}
}
\value{
A tibble with formatted and dynamically added columns for summary statistics.
}
\description{
This function formats numeric columns, dynamically adds summary statistics
based on a list of formulas, and returns the formatted table.
}
\examples{
library(dplyr)
library(ggplot2)  # to get the starwars data set

# descriptive stats for height and mass
starwars \%>\%
  calc_summ_stats(
    height, mass
  ) |>
  adorn_calc_summ_stats()

# Grouped by gender
starwars \%>\%
  group_by(gender) \%>\%
  calc_summ_stats(
    height, mass
  ) |>
  adorn_calc_summ_stats()

# Derive variables within function then summarise
starwars \%>\%
  calc_summ_stats_t(
    heightm = height / 100,
    bmi = mass / heightm^2
  ) |>
  adorn_calc_summ_stats()

# Grouped by gender
starwars \%>\%
  group_by(gender) \%>\%
  calc_summ_stats_t(
    heightm = height / 100,
    bmi = mass / heightm^2
  ) |>
  adorn_calc_summ_stats(form_list = list("{Min}, {Max}"))
}
