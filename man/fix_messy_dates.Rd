% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fix_messy_dates.R
\name{fix_messy_dates}
\alias{fix_messy_dates}
\title{Fix messy dates}
\usage{
fix_messy_dates(x, formats = c("m/d/y"), date_system = "modern")
}
\arguments{
\item{x}{A date}

\item{formats}{Date formats passed to lubridate::parse_date_time()}

\item{date_system}{Date system for janitor::excel_numeric_to_date(), either
"modern" or "mac pre-2011"}
}
\description{
It's come up a number of times, typically when reading in data from Excel,
where a column of data that are supposed to be dates are loaded as a
character column with a number of fomats. There's no one good solution to
this but by combining functions lubridate::parse_date_time() and
janitor::excel_numeric_to_date() I am able to fix this date issue when it
comes up.
}
\examples{
pacman::p_load(
  tidyverse,   # packages ggplot2, tibble, tidyr, readr, purrr, and dplyr
  janitor,     # for working with dirty data
  lubridate,   # for working with dates and times
  magrittr     # includes the \%<>\% assignment-pipe (\%>\% is loaded from dplyr)
)

bar <- tibble::tribble(
  ~date,                     ~comment,
  NA_character_,                      "",
  NA_character_,                      "",
  "12/21/2011",                       "",
  "2/1/2015",                         "",
  "5/17/12",                          "",
  "10/3/15",                          "",
  "42253",        "should be 2015-09-06",
  "42309",        "should be 2015-11-01",
  "5 /23/2015",                       "",
  "10/3 /2015",                       "",
  "unknown",    "Should turn into an NA",
  "10/5/10",      "should be Oct 5 2010",
  "2/1213",  "Can't handle this one yet",
  "21213",   "Can't handle this one yet"
)



bar \%<>\%
  mutate(date2 = fix_messy_dates(date)
  )

bar
}
